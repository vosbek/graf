# =============================================================================
# CODEBASE RAG MVP - ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# Copy this file to .env and fill in your specific values
# This file contains all configuration needed for the MVP

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment mode (development/production)
APP_ENV=development

# API Server Configuration
API_HOST=0.0.0.0
API_PORT=8080
API_WORKERS=4
LOG_LEVEL=INFO

# Repository Storage Path (where your repositories will be indexed)
# Use absolute paths for production, relative for development
REPOS_PATH=./data/repositories

# =============================================================================
# DATABASE CONFIGURATIONS
# =============================================================================

# ChromaDB (Vector Database) Settings
CHROMA_HOST=localhost
CHROMA_PORT=8000
CHROMA_AUTH_ENABLED=false
CHROMA_USERNAME=admin
CHROMA_PASSWORD=changeme123

# Neo4j (Graph Database) Settings  
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=codebase-rag-2024
NEO4J_DATABASE=neo4j

# PostgreSQL (Optional - for metadata storage)
POSTGRES_URL=postgresql://codebase_rag:codebase-rag-2024@localhost:5432/codebase_rag
POSTGRES_USER=codebase_rag
POSTGRES_PASSWORD=codebase-rag-2024
POSTGRES_DB=codebase_rag

# Redis (Optional - for caching and task queues)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=

# =============================================================================
# AI / ML CONFIGURATIONS
# =============================================================================

# Embedding Model for Semantic Search
EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2

# AI Agent Configuration (AWS Bedrock/Strands)
AI_AGENT_ENABLED=true
AI_AGENT_FALLBACK_MODE=true

# AWS Credentials for AI Agent (Optional - uses fallback if not provided)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_PROFILE=
# Require AWS credentials (set to 'true' to fail startup if AWS unavailable)
AWS_REQUIRED=false

# AWS Bedrock Model Settings (Optional)
BEDROCK_MODEL_ID=anthropic.claude-3-sonnet-20240229-v1:0
BEDROCK_REGION=us-east-1

# OpenAI Alternative (Optional - if you prefer OpenAI over AWS)
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4
OPENAI_ENABLED=false

# =============================================================================
# PROCESSING SETTINGS
# =============================================================================

# Maven Dependency Analysis
MAVEN_ENABLED=true
MAVEN_LOCAL_REPO=~/.m2/repository

# File Processing Configuration
MAX_FILE_SIZE=1048576
MAX_CONCURRENT_REPOS=10
BATCH_SIZE=100
PROCESSING_TIMEOUT=300

# Code Chunking Settings
CHUNK_SIZE=1000
CHUNK_OVERLAP=200
MIN_CHUNK_SIZE=100

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Authentication (Disabled for local MVP)
AUTH_ENABLED=false
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=60

# CORS Settings
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Telemetry Settings
ANONYMIZED_TELEMETRY=false
MONITORING_ENABLED=false

# Log Settings
LOG_FILE=./logs/codebase-rag.log
LOG_ROTATION=daily
LOG_RETENTION_DAYS=30

# Prometheus Metrics (Optional)
METRICS_ENABLED=false
METRICS_PORT=9090

# =============================================================================
# STORAGE SETTINGS
# =============================================================================

# MinIO/S3 Storage (Optional - for large file storage)
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=codebase-rag
MINIO_SECRET_KEY=codebase-rag-2024
MINIO_BUCKET=codebase-rag-storage

# Local Storage Settings
DATA_DIR=./data
LOGS_DIR=./logs
TEMP_DIR=./tmp

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/Disable Features
STRUTS_ANALYSIS_ENABLED=true
MAVEN_ANALYSIS_ENABLED=true
MIGRATION_PLANNING_ENABLED=true
GRAPH_VISUALIZATION_ENABLED=true
ADVANCED_SEARCH_ENABLED=true

# Experimental Features
ENABLE_EXPERIMENTAL_FEATURES=false
ENABLE_BATCH_PROCESSING=true
ENABLE_REAL_TIME_INDEXING=false

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development Mode Settings (only used when APP_ENV=development)
DEBUG=true
RELOAD=true
DEV_DATABASE_RESET=false

# Frontend Development
FRONTEND_DEV_SERVER=http://localhost:3000
PROXY_FRONTEND=false

# =============================================================================
# DOCKER SETTINGS (Used in containerized deployments)
# =============================================================================

# Container Resource Limits
MEMORY_LIMIT=8G
CPU_LIMIT=4
WORKERS_MEMORY_LIMIT=16G

# Container Network
DOCKER_NETWORK=codebase-rag-network
CONTAINER_PREFIX=codebase-rag

# =============================================================================
# EXAMPLE VALUES FOR COMMON SETUPS
# =============================================================================

# Example 1: Local Development (Default)
# All services running on localhost with default ports
# No authentication, full logging, development mode

# Example 2: Docker Compose Setup
# CHROMA_HOST=chromadb
# NEO4J_URI=bolt://neo4j:7687
# REDIS_URL=redis://redis:6379

# Example 3: Production Setup
# APP_ENV=production
# AUTH_ENABLED=true
# LOG_LEVEL=WARN
# Strong passwords and proper security settings

# =============================================================================
# NOTES
# =============================================================================

# 1. Copy this file to .env before starting the MVP
# 2. Fill in your specific values, especially passwords
# 3. For local development, defaults should work out of the box
# 4. For production, change all default passwords
# 5. AWS credentials are optional - system works without them
# 6. Use docker-compose.yml environment overrides for containers