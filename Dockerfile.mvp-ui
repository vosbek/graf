# Multi-stage build for MVP with Web UI
# Stage 1: Build React frontend
FROM node:18-alpine as frontend-builder

WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --only=production

COPY frontend/ ./
RUN npm run build

# Stage 2: Python backend with frontend
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies  
COPY mvp/requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy MVP source code
COPY mvp/ /app/

# Copy built frontend from previous stage
COPY --from=frontend-builder /app/frontend/build /app/../frontend/build

# Create data directories
RUN mkdir -p /app/data/repositories /app/logs

# Environment variables
ENV PYTHONPATH=/app
ENV REPOS_PATH=/app/data/repositories
ENV CHROMA_HOST=localhost
ENV CHROMA_PORT=8000
ENV NEO4J_URI=bolt://localhost:7687
ENV NEO4J_USERNAME=neo4j
ENV NEO4J_PASSWORD=codebase-rag-2024
ENV LOG_LEVEL=INFO

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start the application
CMD ["python", "main.py"]