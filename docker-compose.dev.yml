version: '3.8'

services:
  # ChromaDB - Vector Database (Development optimized)
  chromadb:
    image: chromadb/chroma:latest
    container_name: codebase-rag-chromadb-dev
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data_dev:/chroma/chroma
      - ./config/chromadb:/chroma/config
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_GRPC_PORT=50051
      # Removed ClickHouse for dev - use in-process default
      - CHROMA_MEMORY_LIMIT_BYTES=2147483648  # 2GB for dev
      - ANONYMIZED_TELEMETRY=false
    networks:
      - codebase-rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    memory: 2g
    cpus: 2

  # Neo4j - Graph Database (Development optimized)
  neo4j:
    image: neo4j:5.15
    container_name: codebase-rag-neo4j-dev
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/codebase-rag-2024
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      # Development optimized memory settings
      - NEO4J_server_memory_heap_initial__size=2G
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_server_memory_pagecache_size=4G
      - NEO4J_server_default__listen__address=0.0.0.0
      - NEO4J_dbms_logs_debug_level=INFO
      - NEO4J_dbms_checkpoint_interval_time=300s
      - NEO4J_dbms_checkpoint_interval_tx=50000
    volumes:
      - neo4j_data_dev:/data
      - neo4j_logs_dev:/logs
      - neo4j_import_dev:/import
      - neo4j_plugins_dev:/plugins
      - ./config/neo4j:/conf
      - ./scripts/neo4j:/scripts
    networks:
      - codebase-rag-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "codebase-rag-2024", "RETURN 1 as test"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    memory: 8g  # 2G heap + 4G pagecache + overhead
    cpus: 2

  # Redis - Task Queue and Caching
  redis:
    image: redis:7-alpine
    container_name: codebase-rag-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - codebase-rag-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    memory: 1g
    cpus: 1

  # PostgreSQL - Metadata and application data
  postgres:
    image: postgres:15-alpine
    container_name: codebase-rag-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=codebase_rag
      - POSTGRES_USER=codebase_rag
      - POSTGRES_PASSWORD=codebase-rag-2024
      - POSTGRES_INITDB_ARGS="--data-checksums"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./config/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - codebase-rag-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codebase_rag -d codebase_rag"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    memory: 1g
    cpus: 1

  # MinIO - S3-compatible storage for repositories (optional for dev)
  minio:
    image: minio/minio:latest
    container_name: codebase-rag-minio-dev
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=codebase-rag
      - MINIO_ROOT_PASSWORD=codebase-rag-2024
      - MINIO_DOMAIN=localhost
    volumes:
      - minio_data_dev:/data
    command: server /data --console-address ":9001"
    networks:
      - codebase-rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    memory: 512m
    cpus: 1

  # GraphRAG API Server
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: codebase-rag-api-dev
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=development
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - API_WORKERS=2
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=codebase-rag-2024
      - NEO4J_DATABASE=neo4j
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://codebase_rag:codebase-rag-2024@postgres:5432/codebase_rag
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=codebase-rag
      - MINIO_SECRET_KEY=codebase-rag-2024
      - LOG_LEVEL=INFO
      - EMBEDDING_MODEL=microsoft/codebert-base
      # Disable auth for development
      - AUTH_ENABLED=false
    volumes:
      - "./data/repositories:/app/data/repositories"
      - "./logs:/app/logs"
      - "./config/api:/app/config"
    networks:
      - codebase-rag-network
    depends_on:
      chromadb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health/ready"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s  # Allow time for CodeBERT model loading
    restart: unless-stopped
    memory: 2g
    cpus: 2

  # GraphRAG Worker (Development - single replica)
  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: codebase-rag-worker-dev
    environment:
      - APP_ENV=development
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=codebase-rag-2024
      - NEO4J_DATABASE=neo4j
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://codebase_rag:codebase-rag-2024@postgres:5432/codebase_rag
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=codebase-rag
      - MINIO_SECRET_KEY=codebase-rag-2024
      - LOG_LEVEL=INFO
      - EMBEDDING_MODEL=microsoft/codebert-base
      - MAX_CONCURRENT_REPOS=2  # Reduced for dev
      - BATCH_SIZE=25           # Reduced for dev
    volumes:
      - "./data/repositories:/app/data/repositories"
      - "./logs:/app/logs"
      - "./config/worker:/app/config"
    networks:
      - codebase-rag-network
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    memory: 4g
    cpus: 2
    # Single replica for development
    deploy:
      replicas: 1

networks:
  codebase-rag-network:
    driver: bridge

volumes:
  chromadb_data_dev:
  neo4j_data_dev:
  neo4j_logs_dev:
  neo4j_import_dev:
  neo4j_plugins_dev:
  redis_data_dev:
  postgres_data_dev:
  minio_data_dev: